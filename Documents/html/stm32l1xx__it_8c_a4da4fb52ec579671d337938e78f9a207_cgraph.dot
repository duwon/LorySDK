digraph "RTC_Alarm_IRQHandler"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node26 [label="RTC_Alarm_IRQHandler",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node26 -> Node27 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="HW_RTC_IrqHandler",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group___lory_s_d_k___r_t_c___functions.html#gae8ae8ef64d3025701112d509285006d4",tooltip="RTC IRQ Handler on the RTC Alarm "];
  Node27 -> Node28 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="LPM_SetStopMode",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$low__power__manager_8c.html#ac8a0ff787d7d417b9e1f0697a1d5fd6d",tooltip="This API notifies the low power manager if the specified user allows the Off mode or not..."];
  Node27 -> Node29 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="HAL_RTC_AlarmAEventCallback",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$stm32l1xx__hal__msp_8c.html#a11aeff83fd498cddbed3bcddcf017e0a",tooltip="Alarm A callback. "];
  Node29 -> Node30 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="TimerIrqHandler",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$time_server_8c.html#a742ab8d86db201a8b5d900ce8e27cf90",tooltip="Timer IRQ event handler "];
  Node30 -> Node31 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="HW_RTC_GetTimerContext",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group___lory_s_d_k___r_t_c___functions.html#ga1d964c4efab63ea6a4b4ba8f3773e5b0",tooltip="Get the RTC timer Reference "];
  Node30 -> Node32 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="HW_RTC_SetTimerContext",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group___lory_s_d_k___r_t_c___functions.html#gad0a54228cfe8473d90b901ebd76de1d5",tooltip="Set the RTC timer Reference "];
  Node32 -> Node33 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="HW_RTC_GetCalendarValue",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group___lory_s_d_k___r_t_c___functions.html#gaf81b8dc866a5c7b125355b55e3953387",tooltip="get current time from calendar in ticks "];
  Node30 -> Node34 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="HW_RTC_GetTimerElapsedTime",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group___lory_s_d_k___r_t_c___functions.html#ga7961116aa831950b62a413ecbbcfb02a",tooltip="Get the RTC timer elapsed time since the last Reference was set "];
  Node34 -> Node33 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 -> Node35 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="TimerSetTimeout",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$time_server_8c.html#af90925c5246bd6bbc2863d08d4cca3a9",tooltip="Sets a timeout with the duration \"timestamp\" "];
  Node35 -> Node36 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 [label="HW_RTC_GetMinimumTimeout",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group___lory_s_d_k___r_t_c___functions.html#ga254f9e5c17daff978fef15be01021c51",tooltip="Return the minimum timeout the RTC is able to handle "];
  Node35 -> Node34 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 -> Node37 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node37 [label="HW_RTC_SetAlarm",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group___lory_s_d_k___r_t_c___functions.html#ga09cec56d54c13de658fafdd003390771",tooltip="Set the alarm "];
  Node37 -> Node34 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node37 -> Node28 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node37 -> Node38 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node38 [label="LPM_GetMode",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$low__power__manager_8c.html#ae9107e412181f10977b724c346cebd45",tooltip="This API returns the Low Power Mode selected that will be applied when the system will enter low powe..."];
  Node37 -> Node39 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 [label="HW_RTC_StartWakeUpAlarm",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group___lory_s_d_k___r_t_c___functions.html#ga60703fcfc4abd73a2efc980e8bb6ad27",tooltip="start wake up alarm "];
  Node39 -> Node40 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 [label="HW_RTC_StopAlarm",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group___lory_s_d_k___r_t_c___functions.html#ga227be06e4dc1332d46ff12519db183b5",tooltip="Stop the Alarm "];
}
